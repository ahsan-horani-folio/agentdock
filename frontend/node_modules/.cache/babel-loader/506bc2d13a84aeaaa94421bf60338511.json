{"ast":null,"code":"var _jsxFileName = \"/var/www/html/agentdock/frontend/src/components/AgentRegistry.jsx\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nexport default function AgentRegistry() {\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"github\");\n  const [config, setConfig] = useState(\"{}\");\n  const [message, setMessage] = useState(\"\");\n  const registerAgent = async e => {\n    e.preventDefault();\n    try {\n      const parsedConfig = config.trim() === \"\" ? {} : JSON.parse(config);\n      const res = await axios.post(\"http://localhost:8000/mcp/agents/register\", {\n        name,\n        type,\n        config: parsedConfig\n      });\n      setMessage(res.data.message);\n    } catch (err) {\n      setMessage(\"Error: \" + err.message);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-10 border-t pt-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-xl font-bold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"\\u2795 Register New Agent\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: registerAgent,\n    className: \"space-y-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"w-full border p-2\",\n    placeholder: \"Agent Name (e.g. github1)\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"w-full border p-2\",\n    value: type,\n    onChange: e => setType(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"github\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"GitHubAgent\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"jira\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"JiraAgent\")), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"w-full border p-2\",\n    rows: \"4\",\n    placeholder: \"Optional Config (JSON)\",\n    value: config,\n    onChange: e => setConfig(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bg-green-600 text-white p-2 w-full rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Register Agent\")), message && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mt-2 text-sm text-blue-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }\n  }, message));\n}","map":{"version":3,"names":["React","useState","axios","AgentRegistry","name","setName","type","setType","config","setConfig","message","setMessage","registerAgent","e","preventDefault","parsedConfig","trim","JSON","parse","res","post","data","err","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","rows"],"sources":["/var/www/html/agentdock/frontend/src/components/AgentRegistry.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nexport default function AgentRegistry() {\n  const [name, setName] = useState(\"\");\n  const [type, setType] = useState(\"github\");\n  const [config, setConfig] = useState(\"{}\");\n  const [message, setMessage] = useState(\"\");\n\n  const registerAgent = async (e) => {\n    e.preventDefault();\n    try {\n      const parsedConfig = config.trim() === \"\" ? {} : JSON.parse(config);\n      const res = await axios.post(\"http://localhost:8000/mcp/agents/register\", {\n        name,\n        type,\n        config: parsedConfig\n      });\n      setMessage(res.data.message);\n    } catch (err) {\n      setMessage(\"Error: \" + err.message);\n    }\n  };\n\n  return (\n    <div className=\"mt-10 border-t pt-6\">\n      <h2 className=\"text-xl font-bold mb-2\">âž• Register New Agent</h2>\n      <form onSubmit={registerAgent} className=\"space-y-2\">\n        <input className=\"w-full border p-2\" placeholder=\"Agent Name (e.g. github1)\" value={name} onChange={e => setName(e.target.value)} />\n        <select className=\"w-full border p-2\" value={type} onChange={e => setType(e.target.value)}>\n          <option value=\"github\">GitHubAgent</option>\n          <option value=\"jira\">JiraAgent</option>\n        </select>\n        <textarea className=\"w-full border p-2\" rows=\"4\" placeholder='Optional Config (JSON)' value={config} onChange={e => setConfig(e.target.value)} />\n        <button className=\"bg-green-600 text-white p-2 w-full rounded\">Register Agent</button>\n      </form>\n      {message && <p className=\"mt-2 text-sm text-blue-600\">{message}</p>}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}